type = "response")}) +
theme_bw() +
labs(title = "Regresión logística",
y = "Probabilidad default") +
theme(legend.position = "none")
plot(forma ~ borde, data=ceramicas, col="steelblue")
lines(forma ~ borde, newdata, lwd=2)
newdata <- data.frame(borde=seq(min(borde), max(borde),len=500))
newdata <- data.frame(borde=seq(min(borde), max(borde),len=500, na.rm = TRUE))
newdataborde <- data.frame(borde)
probabilities <- modelo %>% predict(newdataborde, type = "response")
plot(forma ~ borde, data=ceramicas, col="steelblue")
lines(forma ~ borde, newdataborde, lwd=2)
plot(forma ~ borde, ceramicas, col = "darkblue",
main = "Modelo regresión logística",
ylab = "P(forma1|borde)",
xlab = "ceramicas", pch = "I")
forma <- as.numeric (forma)
plot(forma ~ borde, ceramicas, col = "darkblue",
main = "Modelo regresión logística",
ylab = "P(forma1|borde)",
xlab = "ceramicas", pch = "I")
plot(forma ~ borde, ceramicas, col = "darkblue",
main = "Modelo regresión logística",
ylab = "P(forma1|borde)",
xlab = "ceramicas", pch = "I")
# type = "response" devuelve las predicciones en forma de probabilidad en lugar de en log_ODDs
curve(predict(modelo, data.frame(borde = x), type = "response"),
col = "firebrick", lwd = 2.5, add = TRUE)
# type = "response" devuelve las predicciones en forma de probabilidad en lugar de en log_ODDs
curve(predict(modelo, data.frame(borde = x), type = "response"),
col = "firebrick", lwd = 2.5, add = TRUE)
plot(forma ~ borde, ceramicas, col = "darkblue",
main = "Modelo regresión logística",
ylab = "P(forma1|borde)",
xlab = "ceramicas", pch = "I")
# type = "response" devuelve las predicciones en forma de probabilidad en lugar de en log_ODDs
curve(predict(modelo, data.frame(borde = x), type = "response"),
col = "firebrick", lwd = 2.5, add = TRUE)
plot(forma ~ borde, ceramicas, col = "darkblue",
main = "Modelo regresión logística",
ylab = "P(forma1|borde)",
xlab = "ceramicas", pch = "I")+
# type = "response" devuelve las predicciones en forma de probabilidad en lugar de en log_ODDs
curve(predict(modelo, data.frame(borde = x), type = "response"),
col = "firebrick", lwd = 2.5, add = TRUE)
plot(forma ~ borde, ceramicas, col = "darkblue",
main = "Modelo regresión logística",
ylab = "P(forma1|borde)",
xlab = "ceramicas", pch = "I")
# type = "response" devuelve las predicciones en forma de probabilidad en lugar de en log_ODDs
curve(predict(modelo, data.frame(borde = x), type = "response"),
col = "firebrick", lwd = 2.5, add = TRUE)
ggplot(data = ceramicas, aes(x = borde, y = forma)) +
geom_point(aes(color = as.factor(forma)), shape = 1) +
geom_smooth(method = "glm",
method.args = list(family = "binomial"),
color = "gray20",
se = FALSE) +
theme_bw() +
theme(legend.position = "none")
ggplot(data = ceramicas, aes(x = borde, y = forma)) +
geom_point(aes(color = as.factor(forma)), shape = 1) +
stat_function(fun = function(x){predict(modelo,
newdata = data.frame(borde = x),
type = "response")}) +
theme_bw() +
labs(title = "Regresión logística",
y = "Probabilidad default") +
theme(legend.position = "none")
Forma
forma
ggplot(data = ceramicas, aes(x = borde, y = forma)) +
geom_point(aes(color = as.factor(forma)), shape = 1) +
stat_function(fun = function(x){predict(modelo,
newdata = data.frame(borde = x),
type = "response")}) +
theme_bw() +
labs(title = "Regresión logística",
y = "Probabilidad default") +
theme(legend.position = "none")
ggplot(data = ceramicas, aes(x = borde, y = forma), ylim = c(0,1)) +
geom_point(aes(color = as.factor(forma)), shape = 1) +
stat_function(fun = function(x){predict(modelo,
newdata = data.frame(borde = x),
type = "response")}) +
theme_bw() +
labs(title = "Regresión logística",
y = "Probabilidad default") +
theme(legend.position = "none")
ggplot(data = ceramicas, aes(x = borde, y = forma), ylim = c(0,1))
ggplot(data = ceramicas, aes(x = borde, y = forma), ylim = c(-1,0)) +
geom_point(aes(color = as.factor(forma)), shape = 1) +
stat_function(fun = function(x){predict(modelo,
newdata = data.frame(borde = x),
type = "response")}) +
theme_bw() +
labs(title = "Regresión logística",
y = "Probabilidad default") +
theme(legend.position = "none")
theme(legend.position = "none")
ggplot(data = ceramicas, mapping = aes(x = forma, y = borde)) +
geom_boxplot(aes(color = as.factor (forma))) +
geom_point(aes(color = as.factor (forma))) +
theme_bw() +
theme(legend.position = "null")
ggplot(data = ceramicas, aes(x = altura, y = forma)) +
geom_point(aes(color = as.factor(forma)), shape = "I", size = 3) +
stat_function(fun = function(x){predict(modelo,
newdata = data.frame(borde = x),
type = "response")}) +
theme_bw() +
labs(title = "Regresión logística",
y = "Probabilidad default") +
theme(legend.position = "none")
modelo_tec <- glm (tecnica ~ borde, data = ceramicas, family = binomial)
summary(modelo_tec)
modelo_tec <- glm (tecnica ~ borde, data = ceramicas, family = binomial)
#Introducimos la tabla
library(readxl)
copas <- read_excel("E:\\trabajo\\copas2.xlsx")
```
library(readxl)
copas <- read_excel("E:\\trabajo\\copas2.xlsx")
ceramicas = as.data.frame(copas)
is.data.frame(ceramicas)
View (ceramicas)
library(ISLR)
library(tidyverse)
library(caret)
library(DT)
datatable(ceramicas)
forma = ceramicas$Forma
tecnica = ceramicas$Tecnica
borde = na.omit (ceramicas$`Diam. Borde`)
base = na.omit (ceramicas$`Diam. Base`)
altura = na.omit (ceramicas$Altura)
borde <- as.numeric(borde)
base <- as.numeric(base)
altura <- as.numeric(altura)
modelo <- glm (forma ~ borde, data = ceramicas, family = binomial)
#Con summary () obtenemos los resultados del modelo.
summary (modelo)
modelo1 <- glm (forma ~ altura, data = ceramicas, family = binomial)
summary(modelo1)
modelo2 <- glm (forma ~ altura + borde, data = ceramicas, family = binomial)
summary(modelo2)
confint(object = modelo1, level = 0.95)
newdatamult <- data.frame(altura + borde)
probabilities <- modelo2 %>% predict(newdatamult, type = "response")
predicted.classes2 <- ifelse(probabilities > 0.5, "Lekythos", "Kylix")
predicted.classes2
#Con anova() analizamos la tabla de desviación.
anova(modelo)
confint(object = modelo, level = 0.95)
#Con la función predict() podemos, incluso, obtener una respuesta (con la opción type ="response") acerca de a qué forma pertenece cada ejemplar según su diámetro de borde.
newdataborde <- data.frame(borde)
probabilities <- modelo %>% predict(newdataborde, type = "response")
predicted.classes1 <- ifelse(probabilities > 0.5, "Kylix", "Lekythos")
predicted.classes1
#Con la Altura
confint(object = modelo1, level = 0.95)
anova(modelo1)
newdataaltura <- data.frame(altura)
probabilities <- modelo %>% predict(newdataaltura, type = "response")
predicted.classes2 <- ifelse(probabilities > 0.5, "Kylix", "Lekythos")
predicted.classes2
summary(modelo2)
modelo3 <- glm (forma ~ altura + borde + base, data = ceramicas, family = binomial)
summary(modelo3)
coef(modelo3)
summary(modelo3)$coef
newdatamult2 <- data.frame(altura + borde + base)
probabilities <- modelo3 %>% predict(newdatamult2, type = "response")
predicted.classes3 <- ifelse(probabilities > 0.5, "Lekythos", "Kylix")
predicted.classes3
predicted.classes2
library(ggplot2)
ggplot(data = ceramicas, mapping = aes(x = forma, y = borde)) +
geom_boxplot(aes(color = as.factor (forma))) +
geom_point(aes(color = as.factor (forma))) +
theme_bw() +
theme(legend.position = "null")
summary(modelo_tec)
modelo_tec <- glm (tecnica ~ borde, data = ceramicas, family = binomial)
summary(modelo_tec)
summary(modelo2)
confint(object = modelo1, level = 0.95)
anova(modelo1)
#Con anova() analizamos la tabla de desviación.
anova(modelo)
anova(modelo1, test ='Chisq')
#Con anova() analizamos la tabla de desviación.
anova(modelo, test ='Chisq')
anova(modelo2, test ='Chisq')
newdatamult <- data.frame(altura + borde)
probabilities <- modelo2 %>% predict(newdatamult, type = "response")
predicted.classes2 <- ifelse(probabilities > 0.5, "Kylix", "Lekythos")
predicted.classes2
coef(modelo3)
summary(modelo3)$coef
summary(modelo3)$coef
anova(modelo3, test ='Chisq')
#Con coef () sacamos solamente los coeficientes.
coef(modelo3)
mosaicplot(forma,tecnica)
mosaicplot(x = forma,y = tecnica)
pred.modelo <- rep("Lekythos", length(newdataborde))
pred.modelo[newdataborde > 0.5] <- "Kylix"
Forma.0910 = forma[!ceramicas]
pred.modelo <- rep("Lekythos", length(newdataborde))
pred.modelo[newdataborde > 0.5] <- "Kylix"
Forma.0910 = forma[!ceramicas]
pred.modelo[newdataborde > 0.5] <- "Kylix"
matriz.confusion <- table(pred.modelo, forma)
matriz.confusion
library(vcd)
mosaic(matriz.confusion, shade = T, colorize = T,
gp = gpar(fill = matrix(c("green3", "red2", "red2", "green3"), 2, 2)))
matriz.confusion <- table(pred.modelo, forma, tecnica)
matriz.confusion
mosaic(matriz.confusion, shade = T, colorize = T,
gp = gpar(fill = matrix(c("green3", "red2", "red2", "green3"), 2, 2)))
pred.modelo[newdataborde > 0.5] <- "Kylix"
pred.modelo <- rep("Lekythos", length(newdataborde))
mosaic(matriz.confusion, shade = T, colorize = T,
gp = gpar(fill = matrix(c("green3", "red2"))))
mosaic(matriz.confusion, shade = T, colorize = T,
gp = gpar(fill = matrix(c("green3", "red2", "red2", "green3"), 2, 2)))
matriz.confusion <- table(pred.modelo, forma)
matriz.confusion <- table(pred.modelo, forma)
pred.modelo <- rep("Lekythos", length(newdataborde))
pred.modelo <- rep("Lekythos", length(newdataborde))
pred.modelo[newdataborde > 0.5] <- "Kylix"
matriz.confusion <- table(pred.modelo, forma)
mosaic(matriz.confusion, shade = T, colorize = T,
gp = gpar(fill = matrix(c("green3", "red2"))))
mosaic(matriz.confusion, shade = T, colorize = T,
gp = gpar(fill = matrix(c("green3", "red2") 2, 2)))
mosaic(matriz.confusion, shade = T, colorize = T,
gp = gpar(fill = matrix(c("green3", "red2") 2, 2)))
mosaic(matriz.confusion, shade = T, colorize = T,
gp = gpar(fill = matrix(c("green3", "red2"), 2, 2)))
pred.modelo <- rep("Lekythos", length(newdataborde))
matriz.confusion <- table(pred.modelo, forma)
pred.modelo <- rep("Lekythos", length(newdataborde))
pred.modelo[newdataborde = 1] <- "Kylix"
matriz.confusion <- table(pred.modelo, forma)
matriz.confusion <- table(pred.modelo, forma)
pred.modelo[newdataborde = 1] <- "Kylix"
matriz.confusion <- table(pred.modelo, forma)
pred.modelo[newdataborde > 0,5] <- "Kylix"
pred.modelo <- rep("Lekythos", length(newdataborde))
pred.modelo[newdataborde > 0,5] <- "Kylix"
pred.modelo <- rep("Lekythos", length(newdataborde))
pred.modelo[newdataborde > 0.5] <- "Kylix"
matriz.confusion <- table(pred.modelo, forma)
mosaic(matriz.confusion, shade = T, colorize = T,
gp = gpar(fill = matrix(c("green3", "red2"), 2, 2)))
pred.modelo <- rep("Lekythos", length(newdataborde))
matriz.confusion <- table(pred.modelo, forma)
pred.modelo <- rep("Lekythos", length(newdataborde))
pred.modelo <- rep("Lekythos", length(newdataborde))
pred.modelo[newdataborde > 0.5] <- "Kylix"
matriz.confusion <- table(pred.modelo, forma)
matriz.confusion
pred.modelo[newdataborde < 0.5] <- "Lekythos"
matriz.confusion <- table(pred.modelo, forma)
mosaic(matriz.confusion, shade = T, colorize = T,
gp = gpar(fill = matrix(c("green3", "red2"), 2, 2)))
pred.modelo <- rep("Lekythos", length(newdataborde))
pred.modelo[newdataborde < 0.5] <- "Lekythos"
pred.modelo[newdataborde > 0.5] <- "Kylix"
matriz.confusion <- table(pred.modelo, forma)
matriz.confusion
library(vcd)
mosaic(matriz.confusion, shade = T, colorize = T,
gp = gpar(fill = matrix(c("green3", "red2"), 2, 2)))
pred.modelo <- rep(length(newdataborde))
pred.modelo <- rep(length(newdataborde))
pred.modelo[newdataborde < 0.5] <- "Lekythos"
pred.modelo[newdataborde > 0.5] <- "Kylix"
matriz.confusion <- table(pred.modelo, forma)
matriz.confusion
library(vcd)
mosaic(matriz.confusion, shade = T, colorize = T,
gp = gpar(fill = matrix(c("green3", "red2"), 2, 2)))
mosaic(matriz.confusion, shade = F, colorize = T,
gp = gpar(fill = matrix(c("green3", "red2"), 2, 2)))
pred.modelo <- rep("0", length(newdataborde))
pred.modelo[newdataborde < 0.5] <- "Lekythos"
pred.modelo[newdataborde > 0.5] <- "Kylix"
matriz.confusion <- table(pred.modelo, forma)
mosaic(matriz.confusion, shade = T, colorize = T,
gp = gpar(fill = matrix(c("green3", "red2"), 2, 2)))
mosaic(matriz.confusion, shade = T, colorize = T,
gp = gpar(fill = matrix(c("green3", "red2"), 1, 1)))
mosaic(matriz.confusion, shade = T, colorize = T,
gp = gpar(fill = matrix(c("green3", "red2"), 1, 3)))
mosaic(matriz.confusion, shade = T, colorize = T,
gp = gpar(fill = matrix(c("green3", "red2"), 3)))
mosaic(matriz.confusion, shade = T, colorize = T,
gp = gpar(fill = matrix(c("green3", "red2"), 0, 3)))
mosaic(matriz.confusion, shade = T, colorize = T,
gp = gpar(fill = matrix(c("green3", "red2"), 1, 3)))
pred.modelo
pred.modelo[newdataborde < 0.5] <- "Lekythos"
pred.modelo[newdataborde > 0.5] <- "Kylix"
pred.modelo
newdatafor <- predict(modelo, newdata = ceramicas, type = "response")
pred.modelo <- rep("Lekythos", length(newdatafor))
pred.modelo[newdatafor> 0.5] <- "Kylix"
matriz.confusion <- table(pred.modelo, forma)
mosaic(matriz.confusion, shade = T, colorize = T,
gp = gpar(fill = matrix(c("green3", "red2"), 2, 2)))
mosaic(matriz.confusion, shade = T, colorize = T,
gp = gpar(fill = matrix(c("green3", "red2"), 1, 3)))
mosaic(matriz.confusion, shade = T, colorize = T,
gp = gpar(fill = matrix(c("green3", "red2"), 2, 2)))
matriz.confusion
pred.modelo[newdatafor> 0.1] <- "Kylix"
matriz.confusion <- table(pred.modelo, forma)
matriz.confusion
Forma.0910 = forma[!ceramicas]
mosaic(matriz.confusion, shade = T, colorize = T,
gp = gpar(fill = matrix(c("green3", "red2"), 1, 1)))
mosaic(matriz.confusion, shade = T, colorize = T,
gp = gpar(fill = matrix(c("green3", "red2"), 2, 2)))
newdatafor <- predict(modelo, newdata = borde, type = "response")
newdatafor <- predict(modelo, newdata = data.frame(borde), type = "response")
pred.modelo <- rep("Lekythos", length(newdatafor))
pred.modelo[newdatafor> 0.5] <- "Kylix"
matriz.confusion <- table(pred.modelo, forma)
matriz.confusion
mosaic(matriz.confusion, shade = T, colorize = T,
gp = gpar(fill = matrix(c("green3", "red2"), 2, 2)))
matriz.confusion <- table(pred.modelo, forma)
matriz.confusion
newdatafor
View (newdatafor)
newdatafor <- predict(modelo, newdata = data.frame(borde), type = "response")
pred.modelo <- rep("Lekythos", length(na.omit (newdatafor)))
pred.modelo[newdatafor> 0.5] <- "Kylix"
matriz.confusion <- table(pred.modelo, forma)
matriz.confusion
predicted.classes1
newdatafor <- predict(modelo, newdata = data.frame(forma), type = "response")
pred.modelo <- rep("Lekythos", length(na.omit (newdatafor)))
pred.modelo[newdatafor> 0.5] <- "Kylix"
matriz.confusion <- table(pred.modelo, forma)
mosaic(matriz.confusion, shade = T, colorize = T,
gp = gpar(fill = matrix(c("#99cc99", "#cc9999"), 2, 2)))
newdatafor <- predict(modelo, newdata = data.frame(forma), type = "response")
pred.modelo <- rep("Kylix", length(na.omit (newdatafor)))
pred.modelo[newdatafor> 0.5] <- "Lekythos"
matriz.confusion <- table(pred.modelo, forma)
matriz.confusion
library(vcd)
mosaic(matriz.confusion, shade = T, colorize = T,
gp = gpar(fill = matrix(c("#99cc99", "#cc9999"), 2, 2)))
modelo
Summary (modelo)
summary (modelo)
pred.modelo <- rep("Lekythos", length(ewdatafor))
pred.modelo[newdatafor > 3] <- "Kylix"
matriz.confusion <- table(pred.modelo, forma)
matriz.confusion
pred.modelo[newdatafor > 0.5] <- "Kylix"
matriz.confusion
newdatafor <- predict(modelo, newdata = data.frame(forma), type = "response")
pred.modelo <- rep("Lekythos", length(newdatafor))
pred.modelo[newdatafor > 0.5] <- "Kylix"
matriz.confusion <- table(pred.modelo, forma)
matriz.confusion
library(vcd)
mosaic(matriz.confusion, shade = T, colorize = T,
gp = gpar(fill = matrix(c("#99cc99", "#cc9999"), 2, 2)))
dnn = c("observaciones", "predicciones")
matriz.confusion
matriz.confusion <- table(pred.modelo, forma,
dnn = c("observaciones", "predicciones"))
matriz.confusion
pred.modelo["Kylix" = 1, "Lekythos" = 0]
pred.modelo["Kylix" = 1, "Lekythos" = 0]
pred.modelo ["Kylix" = 1, "Lekythos" = 0]
pred.modelo ("Kylix" = 1, "Lekythos" = 0)
pred.modelo ("Kylix" = 1, "Lekythos" = 0)
pred.modelo ["Kylix" = 1]
pred.modelo ["Kylix" = 1], ["Lekythos" = 0]
pred.modelo ["Kylix" = 1] ["Lekythos" = 0]
matriz.confusion <- table(pred.modelo, forma,
dnn = c("observaciones", "predicciones"))
matriz.confusion
matriz.confusion <- table(pred.modelo, forma,
dnn = c("predicciones"))
matriz.confusion
matriz.confusion <- table(pred.modelo, forma,
dnn = c("Forma", "predicciones"))
matriz.confusion
# Vector de elementos “Lekythos”
pred.modelo <- rep(length(newdatafor))
matriz.confusion <- table(pred.modelo, forma,
dnn = c("Forma", "predicciones"))
newdatafor <- predict(modelo, newdata = data.frame(forma), type = "response")
# Vector de elementos “Lekythos”
pred.modelo <- rep(length(newdatafor))
pred.modelo ["Kylix" = 1] ["Lekythos" = 0]
matriz.confusion <- table(pred.modelo, forma,
dnn = c("Forma", "predicciones"))
matriz.confusion <- table(pred.modelo, forma,
dnn = c("Forma", "predicciones"))
pred.modelo ["Kylix" = 1] ["Lekythos" = 0]
# Vector de elementos “Lekythos”
pred.modelo <- rep(length(newdatafor))
matriz.confusion <- table(pred.modelo, forma,
dnn = c("Forma", "predicciones"))
# Vector de elementos “Lekythos”
pred.modelo <- rep("0", length(newdatafor))
pred.modelo ["Kylix" = 1] ["Lekythos" = 0]
matriz.confusion <- table(pred.modelo, forma,
dnn = c("Forma", "predicciones"))
matriz.confusion
pred.modelo ["Kylix" = 1] ["Lekythos" = 0]
matriz.confusion <- table(pred.modelo, forma,
dnn = c("Forma", "predicciones"))
matriz.confusion
pred.modelo [newdatafor > 0.5] <- "Kylix"
matriz.confusion <- table(pred.modelo, forma,
dnn = c("Forma", "predicciones"))
matriz.confusion
View (newdatafor)
pred.modelo [newdatafor > 0.5] <- "Kylix"
# Vector de elementos “Lekythos”
pred.modelo <- rep("Lekythos", length(newdatafor))
newdatafor <- predict(modelo, newdata = data.frame(forma), type = "response")
# Vector de elementos “Lekythos”
pred.modelo <- rep("Lekythos", length(newdatafor))
pred.modelo [newdatafor > 0.5] <- "Kylix"
matriz.confusion <- table(pred.modelo, forma,
dnn = c("Forma", "predicciones"))
matriz.confusion
library(vcd)
mosaic(matriz.confusion, shade = T, colorize = T,
gp = gpar(fill = matrix(c("#99cc99", "#cc9999"), 2, 2)))
ggplot(data = ceramicas, aes(x = borde + altura, y = forma)) +
geom_point(aes(color = as.factor(forma)), shape = "I", size = 3) +
stat_function(fun = function(x){predict(modelo2,
newdata = data.frame(borde + altura = x),
ggplot(data = ceramicas, aes(x = borde + altura, y = forma)) +
geom_point(aes(color = as.factor(forma)), shape = "I", size = 3) +
stat_function(fun = function(x){predict(modelo2,
newdata = data.frame(borde + altura = x),
ggplot(data = ceramicas, aes(x = borde + altura, y = forma)) +
geom_point(aes(color = as.factor(forma)), shape = "I", size = 3) +
stat_function(fun = function(x){predict(modelo2,
newdata = data.frame((borde + altura) = x),
ggplot(data = ceramicas, aes(x = borde + altura, y = forma)) +
geom_point(aes(color = as.factor(forma)), shape = "I", size = 3) +
stat_function(fun = function(x){predict(modelo2,
newdata = data.frame(borde + altura),
type = "response")}) +
theme_bw() +
labs(title = "Regresión logística",
y = "Probabilidad Técnica (1 = Barniz Negro, 0 = Figurada") +
theme(legend.position = "none")
df= borde + altura
ggplot(data = ceramicas, aes(x = borde + altura, y = forma)) +
geom_point(aes(color = as.factor(forma)), shape = "I", size = 3) +
stat_function(fun = function(x){predict(modelo2,
newdata = data.frame(df),
type = "response")}) +
theme_bw() +
labs(title = "Regresión logística",
y = "Probabilidad Técnica (1 = Barniz Negro, 0 = Figurada") +
theme(legend.position = "none")
ggplot(data = ceramicas, aes(x = borde + altura, y = forma)) +
geom_point(aes(color = as.factor(forma)), shape = "I", size = 3) +
stat_function(fun = function(x){predict(modelo2,
newdata = data.frame(df = x),
type = "response")}) +
theme_bw() +
labs(title = "Regresión logística",
y = "Probabilidad Técnica (1 = Barniz Negro, 0 = Figurada") +
theme(legend.position = "none")
ggplot(data = ceramicas, aes(x = borde + altura, y = forma)) +
geom_point(aes(color = as.factor(forma)), shape = "I", size = 3) +
stat_function(fun = function(x){predict(modelo2,
newdata = data.frame(borde = x, altura = x),
type = "response")}) +
theme_bw() +
labs(title = "Regresión logística",
y = "Probabilidad Técnica (1 = Barniz Negro, 0 = Figurada") +
theme(legend.position = "none")
ggplot(data = ceramicas, aes(x = borde + altura, y = forma)) +
geom_point(aes(color = as.factor(forma)), shape = "I", size = 3) +
stat_function(fun = function(x){predict(modelo2,
newdata = data.frame(borde = x + altura = x),
ggplot(data = ceramicas, aes(x = borde + altura, y = forma)) +
geom_point(aes(color = as.factor(forma)), shape = "I", size = 3) +
stat_function(fun = function(x){predict(modelo2,
newdata = data.frame(borde = x),
type = "response")}) +
theme_bw() +
labs(title = "Regresión logística",
y = "Probabilidad Técnica (1 = Barniz Negro, 0 = Figurada") +
theme(legend.position = "none")
ggplot(data = ceramicas, aes(x = altura + borde, y = forma)) +
geom_point(aes(color = as.factor(forma)), shape = "I", size = 3) +
stat_function(fun = function(x){predict(modelo,
newdata = data.frame(altura = x),
type = "response")})
anova(modelo2, test ='Chisq')
